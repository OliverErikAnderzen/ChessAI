# Chess AI

Welcome to the **Chess AI** project! This repository contains a web-based chess game powered by an AI capable of playing chess. The project allows users to play against the AI, observe chess rules, and enjoy a fully interactive chessboard.

## Features

- **Interactive Chessboard**: A visually appealing chessboard built using HTML, CSS, and JavaScript.
- **Legal Move Enforcement**: The game enforces chess rules, including special moves like castling, en passant, and pawn promotion.
- **Turn-Based Play**: Keeps track of turns, ensuring valid player and AI moves.
- **Game Logic**: Includes detection for check, checkmate, and stalemate conditions.

## Getting Started

### Prerequisites

To run this project locally, you need:

- A web browser (e.g., Chrome, Firefox, Safari, or Edge).
- Basic knowledge of how to run HTML, CSS, and JavaScript files locally or a simple web server.

### Installation

1. Clone this repository:

   ```bash
   git clone https://github.com/yourusername/chess-ai.git
   cd chess-ai
   ```

2. Open `index.html` in your browser:

   ```bash
   Open the file in a browser to launch the chessboard.
   ```

Alternatively, you can serve the files using a simple HTTP server:

```bash
python3 -m http.server
```

Navigate to `http://localhost:8000` in your browser.

## File Structure

- **index.html**: The main HTML file containing the structure of the chessboard and game interface.
- **style.css**: Styles for the chessboard and pieces.
- **script.js**: JavaScript logic for game rules, piece movement, and AI interaction.
- **pieces/**: Images of chess pieces used for visualization.

## How to Play

1. Open the game in your browser.
2. The game starts with **White's turn**.
3. Click on a piece to select it, and then click on a valid destination to move.
4. The AI will play its move after you make yours.
5. Play continues until checkmate, stalemate, or resignation.

## Development

### Key Functionalities

- **Game Initialization**: The chessboard is dynamically generated using JavaScript.
- **Turn Switching**: Alternates between White and Black turns.
- **Move Validation**: Implements move rules for all chess pieces.
- **Check and Checkmate**: Validates check and checkmate conditions after every move.

### Extending the AI

To improve or customize the AI:

1. Enhance the move evaluation logic in `script.js`.
2. Add a scoring system to rank moves based on board position.
3. Integrate an advanced chess engine, such as Stockfish, for more sophisticated play.

## Contributing

We welcome contributions! If you'd like to help, please:

- Fork the repository.
- Create a feature branch (`git checkout -b feature-name`).
- Commit your changes (`git commit -m 'Add feature'`).
- Push to the branch (`git push origin feature-name`).
- Open a pull request.

## License

This project is licensed under the **MIT License**. See the `LICENSE` file for details.

## Acknowledgments

- Chess rules and mechanics inspired by classical chess.
- Icons and visuals made possible with chess piece images.
- OpenAI for providing resources to implement game logic and AI strategies.

Enjoy playing **Chess AI** and improve your skills!

